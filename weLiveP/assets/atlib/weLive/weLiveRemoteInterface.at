object:{
//get info from other local interface
//send info to JAVA

	def weLiveRemoteInterface := object: {
		def weLiveParent;
		
		def init(parent){
			weLiveParent := parent;
		};
		
		/*called when my user is discovered by other
 	    */
		def getUserId() {
 	    	//send back myUserID
			weLiveParent.myUserId;
		};
		
		/* Called when my user id discovered by other
		*/
		def getCoordinator() {
			//send back my coordinatorID
			weLiveParent.coordinatorId;	
		};
		
		/* Called from coordinator fight
		*/
		def areYouLive(){
			//I receive coordinator election message (by Bully)
			//I start the election also
			weLiveParent.coordinatorFight();
			
			//answer that I am alive by sending back myUserId
			weLiveParent.myUserId;
		};
		
		
		/* Receive new placed cell from other member
		*/
		def getPlacedCell(userId, x, y){	
			//Send to JAVA and store it
			weLiveParent.JweLive.storePlacedCell(userId, x, y);			
		};
		
		/* Receive the new grid from coordinator
		*/
		def getNewGenGrid(newUsersPointsArray){
			//Set local variable mainGrid
			weLiveParent.mainGrid := newUsersPointsArray;
			
			//Send new grid to JAVA
			weLiveParent.JweLive.setGenerationArray(newUsersPointsArray);
		};


		/* Receive the UserInfo array from coordinator (userID, color, isGrayedOut)
		*/
		def getUsersColors(userInfoArray){	
			//Set local variable allUserInfoArray
			weLiveParent.allUserInfoArray := userInfoArray;
			
			//Send usersInfo array to JAVA
			weLiveParent.JweLive.setUsersColorArray(userInfoArray);

		};
		

		/* Receive new coordinator ID from coordinator
		*/		
		def setTheCoordinator(userId){
			// Find far ref for the coordinator
			def othRef := weLiveParent.users.get(userId);
			// Set local variables coordinatorRef and coordinatorId
			weLiveParent.setCoordinatorLocal(userId,othRef);
			
			// Change peerAnswer value to true
			weLiveParent.peerAnswer := true;
		}; 
		
		
		/* Receive new grid height and width from coordinator
		*/
		def getGridSize(h, w){
			//Set local variables gridH and gridW
			weLiveParent.gridH := h;
			weLiveParent.gridW := w;
			
			//send new grid size to JAVA
			weLiveParent.JweLive.setGridSize(h,w);
		};
		
	}; 
};