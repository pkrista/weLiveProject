object:{//From Java send to AT
	  
	def weLiveLocalInterface := object: {
			
		//Reference to the object created by makeATPortalPong, 
		//needed to set and get ID and userName
		def weLiveParent;
		
		def init(parent){
			self.weLiveParent := parent;
		};
			
			
		//get MyUSerId - generated in JAVA
		def myId(myUserId){
			weLiveParent.myUserId := myUserId;
				
			//print my users id
			system.println("My Users ID = " + myUserId);
		};
		
		
		//Touch detected in JAVA send to AT
		def sendPlacedCell(x, y){
			//send message to each player with changes
			def msg := <-getPlacedCell(weLiveParent.myUserId, x, y);
			weLiveParent.userReferences.each: { |p| p <+ msg};
		}; 
		
		
		//Get from Java Next Generation array list to all peers online
		def sendNewGenGrid(newUsersPointsArray){
			//Set up new grid as local variable
			weLiveParent.mainGrid := newUsersPointsArray;
			
			//Send fresh generated array list to all peers online
			def msg := <-getNewGenGrid(newUsersPointsArray);
			weLiveParent.userIDsOnlineMap.each: { |p| p <+ msg};
		};
		
		//Send all users and it color to all peers
		def sendUserInfo(userInfoArray){
			
			weLiveParent.allUserInfoArray := userInfoArray;
			
			//Send all users and it colors to all members
			def msg := <-getUsersColors(userInfoArray);
			weLiveParent.userIDsOnlineMap.each: { |p| p <+ msg};
		};
		
		
		//
		def sendGridSize(h,w){
			
			weLiveParent.gridH := h;
			weLiveParent.gridW := w;
			
			//send grid size to all discovered users
			def msg := <-getGridSize(h,w);
			weLiveParent.userReferences.each: { |p| p <+ msg};
		}
			 
	}; //end of local interface
		
};