object:{
//From Java to AT
	  
	def weLiveLocalInterface := object: {
	
		def weLiveParent;
		
		def init(parent){
			self.weLiveParent := parent;
		};
			
		//Get MyUserId (generated in JAVA)
		def myId(myUserId){
			//Set local variable myUserId
			weLiveParent.myUserId := myUserId;
				
			//print my users id
			system.println("My Users ID = " + myUserId);
			
			//Add my user to users id list
			addMyUserToUsersIdList();
		};
		
		def addMyUserToUsersIdList(){
			weLiveParent.userIds := weLiveParent.userIds + [weLiveParent.myUserId]
		};
		
		//Get the new touch coordinates
		def sendPlacedCell(x, y){
			//send to all discovred members new touch coordinates
			def msg := <-getPlacedCell(weLiveParent.myUserId, x, y);
			weLiveParent.userReferences.each: { |p| p <+ msg};
		}; 
		
		//Get from Java Next Generation array
		def sendNewGenGrid(newUsersPointsArray){
			//Set local variable mainGrid
			weLiveParent.mainGrid := newUsersPointsArray;
			
			//Send new grid array to all members online
			def msg := <-getNewGenGrid(newUsersPointsArray);
			weLiveParent.userIDsOnlineMap.each: { |p| p <+ msg};
		};
		
		//Get an array with userInformation (id, color,is GrayedOut)
		def sendUserInfo(userInfoArray){	
			//Set local variable allUserInfoArray
			weLiveParent.allUserInfoArray := userInfoArray;
			
			if:(weLiveParent.allUserInfoArray.size() == 20) then: {
				weLiveParent.acceptPlayer := false;
			};
			
			//Send all usersInfo array to all members online
			def msg := <-getUsersColors(userInfoArray, weLiveParent.acceptPlayer);
			weLiveParent.userIDsOnlineMap.each: { |p| p <+ msg};
		
		};
		
		//Get the new Grid size
		def sendGridSize(h,w){
			
			weLiveParent.gridH := h;
			weLiveParent.gridW := w;
			
			//send grid size to all discovered users
			def msg := <-getGridSize(h,w);
			weLiveParent.userReferences.each: { |p| p <+ msg};
		}; 
	}; //end of local interface	
};